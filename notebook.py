# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jcvk6HrtH304iMRbZtk3mKJ2Y41QHZzv

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** Muhammad Kristover Armand
- **Email:** mkarmand43@gmail.com
- **ID Dicoding:** mk_armand_13

## Menentukan Pertanyaan Bisnis

- Pertanyaan 1: Bagaimana tren suhu bulanan di changping?
- Pertanyaan 2: Bagaimana tren PM2.5 bulanan di changping?

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import geopandas as gpd
import folium

"""## Data Wrangling

### Gathering Data
"""

# Load dataset
data_df = pd.read_csv("data.csv")
data_df

"""### Assessing Data

Tipe Data
"""

# Menampilkan informasi dataset
data_df.info()
print("Missing Values:")
print(data_df.isna().sum())
print("Duplicated Rows:", data_df.duplicated().sum())

"""### Cleaning Data"""

# Mengubah data menjadi format datetime
data_df['date'] = pd.to_datetime(data_df[['year', 'month', 'day', 'hour']])
data_df.set_index('date', inplace=True)

# Menangani nilai yang hilang dengan imputasi
num_cols = ['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3', 'TEMP', 'PRES', 'DEWP', 'RAIN', 'WSPM']
data_df[num_cols] = data_df[num_cols].fillna(data_df[num_cols].mean())
data_df['wd'].fillna(data_df['wd'].mode()[0], inplace=True)

data_df.isna().sum()

# Download data yang sudah di cleaning
data_df.to_csv("cleaned_data.csv", index=True)

"""## Exploratory Data Analysis (EDA)

### Explore ...
"""

# Menampilkan statistik deskriptif
data_df.describe(include='all')

# Analisis statistik dengan groupby
grouped_data = data_df.groupby(['year', 'month'])[['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3', 'TEMP', 'PRES', 'DEWP', 'RAIN', 'WSPM']].agg(['min', 'max', 'mean'])

# Menampilkan ringkasan
grouped_data

# Mengabaikan kolom non-numerik sebelum heatmap
numeric_cols = data_df.select_dtypes(include=[np.number]).columns

# Exploratory Data Analysis (EDA)
plt.figure(figsize=(12, 6))
sns.heatmap(data_df[numeric_cols].corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title("Heatmap Korelasi Antar-Variabel")
plt.show()

# Tentukan ukuran figure dan grid
plt.figure(figsize=(18, 15))
data_df[numeric_cols].hist(bins=20, layout=(6, 5), figsize=(18, 15), edgecolor='black')
plt.tight_layout()
plt.suptitle("Distribusi Fitur Numerikal", fontsize=20, y=1.02)
plt.show()

"""## Visualization & Explanatory Analysis

### Pertanyaan 1: Suhu Bulanan
"""

# Visualisasi tren suhu bulanan
plt.figure(figsize=(12, 5))
data_df['TEMP'].resample('M').mean().plot(marker='o', linestyle='-', color='r')
plt.title("Tren Suhu Bulanan")
plt.xlabel("Bulan")
plt.ylabel("Suhu Rata-rata (°C)")
plt.grid(True)
plt.show()

"""### Pertanyaan 2: Tren PM 2.5 Bulanan"""

# Visualisasi tren PM2.5 bulanan
plt.figure(figsize=(12, 5))
data_df['PM2.5'].resample('M').mean().plot(marker='o', linestyle='-', color='b')
plt.title("Tren PM2.5 Bulanan")
plt.xlabel("Bulan")
plt.ylabel("PM2.5 Rata-rata")
plt.grid(True)
plt.show()

"""## Analisis Lanjutan (Opsional)

Geospital Analysis
"""

import folium
from folium.plugins import HeatMap
import pandas as pd

# Geospatial Analysis
locations = {"Changping": [40.22, 116.23]}
data_df['latitude'] = locations['Changping'][0]
data_df['longitude'] = locations['Changping'][1]
# Misal data punya kolom: Latitude, Longitude, PM2_5
# Assuming data_df has 'latitude', 'longitude', and 'PM2.5' columns
m = folium.Map(location=[-6.2, 106.8], zoom_start=10)

# Prepare data for heatmap: list of [latitude, longitude, intensity]
# Ensure data_df has 'latitude' and 'longitude' columns with valid coordinates
heat_data = data_df[['latitude', 'longitude', 'PM2.5']].dropna().values.tolist()

# Tambahkan heatmap
HeatMap(heat_data).add_to(m)

m  # tampilkan peta

def group_pm25(value):
    if value <= 12:
        return 'Baik'
    elif value <= 35.4:
        return 'Sedang'
    elif value <= 55.4:
        return 'Tidak Sehat untuk Sensitif'
    elif value <= 150.4:
        return 'Tidak Sehat'
    else:
        return 'Sangat Tidak Sehat'

data_df['PM2_5_Category'] = data_df['PM2.5'].apply(group_pm25)


import matplotlib.pyplot as plt

# Hitung jumlah data per kategori
pm25_counts = data_df['PM2_5_Category'].value_counts().sort_index()

# Bar chart
plt.figure(figsize=(8, 5))
pm25_counts.plot(kind='bar', color='skyblue')
plt.title('Distribusi Kategori PM2.5')
plt.xlabel('Kategori')
plt.ylabel('Jumlah Data')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

# Binning ke dalam 4 kelompok berdasarkan PM10
bins = [0, 50, 100, 200, data_df['PM10'].max()]
labels = ['Low', 'Moderate', 'High', 'Very High']
data_df['PM10_Bin'] = pd.cut(data_df['PM10'], bins=bins, labels=labels, include_lowest=True)

# Hitung jumlah data per kategori
pm25_counts = data_df['PM10_Bin'].value_counts().sort_index()

# Bar chart
plt.figure(figsize=(8, 5))
pm25_counts.plot(kind='bar', color='skyblue')
plt.title('Distribusi Kategori PM10')
plt.xlabel('Kategori')
plt.ylabel('Jumlah Data')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

data_df['PM2_5_Quantile'] = pd.qcut(data_df['PM2.5'], q=4, labels=['Q1', 'Q2', 'Q3', 'Q4'])

# Hitung jumlah data per kategori
pm25_counts = data_df['PM2_5_Quantile'].value_counts().sort_index()

# Bar chart
plt.figure(figsize=(8, 5))
pm25_counts.plot(kind='bar', color='skyblue')
plt.title('Distribusi Kategori PM2.5')
plt.xlabel('Kategori')
plt.ylabel('Jumlah Data')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

"""## Conclusion

- Conclution pertanyaan 1
1. Suhu tertinggi dalam setahun mencapai sekitar 27–30°C pada puncak musim panas.
2. Suhu terendah turun hingga sekitar -5°C hingga 0°C pada musim dingin.
3. Perubahan suhu cukup drastis antara musim panas dan musim dingin, menunjukkan wilayah dengan perbedaan suhu musiman yang jelas.
4. Setiap tahun menunjukkan tren yang konsisten, dengan puncak suhu terjadi di pertengahan tahun dan titik terendah di awal tahun berikutnya.

- Conclution pertanyaan 2
1. Konsentrasi PM2.5 cenderung lebih tinggi selama musim dingin (sekitar Desember - Februari).
2. Konsentrasi lebih rendah selama musim panas (sekitar Juni - Agustus).
3. Hal ini menunjukkan bahwa musim dingin memiliki tingkat polusi udara lebih tinggi dibanding musim lainnya.
"""